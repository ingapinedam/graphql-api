type Query {
    bookById(id: ID!): Book
    allBooks: [Book]
    booksByTitle(title: String!): [Book]
    allAuthors: [Author]
    authorById(id: ID!): Author
    currentDate: DateInfo
}

type Mutation {
    createBook(book: BookInput!): Book
    updateBook(id: ID!, book: BookInput!): Book
    deleteBook(id: ID!): Boolean
    createAuthor(author: AuthorInput!): Author
    updateAuthor(id: ID!, author: AuthorInput!): Author
    deleteAuthor(id: ID!): Boolean
}

type Book {
    id: ID!
    title: String!
    isbn: String
    pageCount: Int
    publishedDate: String
    genre: String
    author: Author
}

type Author {
    id: ID!
    firstName: String!
    lastName: String!
    birthDate: String
    books: [Book]
}

type DateInfo {
    currentDate: String
    formattedDate: String
    timestamp: String
    timezone: String
}

input BookInput {
    title: String!
    isbn: String
    pageCount: Int
    publishedDate: String
    genre: String
    authorId: ID
}

input AuthorInput {
    firstName: String!
    lastName: String!
    birthDate: String
}